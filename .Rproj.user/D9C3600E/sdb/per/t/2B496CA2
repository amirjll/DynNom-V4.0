{
    "contents" : "model <- Glm(Fertility ~ Agriculture + Education + Catholic, data = swiss)\ndata=swiss\nconfint(model)\n\ndata1 =as.data.frame(Titanic)\nmodel <- Glm(Survived ~ Age + Class + Sex, data = data1, weights = Freq,\n              family = binomial(\"probit\"))\n\nmodel <- Glm(as.numeric(swiss$Fertility > 70) ~ Agriculture + Education + Catholic, data = swiss, family = binomial)\nDynNom.Glm(model,swiss)\n\nswiss$ftl <- as.numeric(swiss$Fertility > 70)\nmodel2 <- glm(as.numeric(swiss$Fertility > 70) ~ Agriculture + Education + Catholic, data = swiss, family = binomial)\nDynNom.Glm(model2,swiss)\n\nmodel <- Glm(Fertility ~ Agriculture + Education + Catholic,data = swiss)\n\nci.c <- matrix(NA,length(model$coefficients),2)\ncolnames(ci.c) <- c(\"2.5 %\",\"97.5 %\")\nrownames(ci.c) <- names(model$coefficients)\ns.e. <- vcov(model)\nfor(i in 1:length(model$coefficients)){\n  ci.c[i,1] <- exp(model$coefficients[[i]] - (sqrt(vcov(model)[i,i])*qnorm(1 - (1 - clevel)/2)))\n  ci.c[i,2] <- exp(model$coefficients[[i]] + (sqrt(vcov(model)[i,i])*qnorm(1 - (1 - clevel)/2)))\n}\n\n\nclevel=0.95\n\n\n\n\n\n\n\n\n\nstargazer(model, type = \"text\", omit.stat = c(\"LL\", \"ser\", \"f\"),\n          ci = TRUE, ci.level = clevel, single.row = TRUE,\n          title = paste(model$family$family, \" regression (\", model$family$link, \"): \", model$formula[2],\n                        \" \", model$formula[1], \" \", model$formula[3], sep = \"\"))\n\nclevel=0.95\n\ncoef.c <- exp(model$coef)\nci.c <- exp(suppressMessages(confint(model, level = clevel)))\nstargazer(model, coef = list(coef.c), ci.custom = list(ci.c), p.auto = F, type = \"text\",\n          omit.stat = c(\"LL\", \"ser\", \"f\"), ci = F, ci.level = clevel, single.row = TRUE,\n          title = paste(model$family$family, \" regression (\", model$family$link, \"): \", model$formula[2],\n                        \" \", model$formula[1], \" \", model$formula[3], sep = \"\"))\n\n\n2.5 %    97.5 %\n  (Intercept) 1.0574639 1.9726543\nAgeAdult    0.4270294 0.7328994\nClass2nd    0.4222820 0.6708095\nClass3rd    0.2946517 0.4339897\nClassCrew   0.4835809 0.7022379\nSexFemale   3.6406091 4.9987433\n> class(ci.c)\n\nexp(-0.58034-((qnorm(1 - (1 - clevel)/2))* 0.14143))\n\n\nDynNom.Glm(model1,swiss)\nattr(model$terms, \"dataClasses\")\n\n\nmodel <- Glm(Survived ~ Age + Class + Sex, data = data1, weights = Freq,\n              family = binomial(\"probit\"))\n\nsumm <- summary(model)\nci.c <- matrix(NA,length(model$coefficients),2)\ncolnames(ci.c) <- c(\"2.5 %\",\"97.5 %\")\nrownames(ci.c) <- names(model$coefficients)\n\nfor(i in 1:length(model$coefficients)){\n  ci.c[i,1] <- exp(summ$coefficients[i,1] - (summ$coefficients[i,2]*qnorm(1 - (1 - clevel)/2)))\n  ci.c[i,2] <- exp(summ$coefficients[i,1] + (summ$coefficients[i,2]*qnorm(1 - (1 - clevel)/2)))\n}\n\nmodel$coefficients\nsummary(model)$coefficients[2]\n\nglm\n[1] \"aic\"               \"boundary\"          \"call\"              \"coefficients\"     \n[5] \"contrasts\"         \"control\"           \"converged\"         \"data\"             \n[9] \"deviance\"          \"df.null\"           \"df.residual\"       \"effects\"          \n[13] \"family\"            \"fitted.values\"     \"formula\"           \"iter\"             \n[17] \"linear.predictors\" \"method\"            \"model\"             \"null.deviance\"    \n[21] \"offset\"            \"prior.weights\"     \"qr\"                \"R\"                \n[25] \"rank\"              \"residuals\"         \"terms\"             \"weights\"          \n[29] \"xlevels\"           \"y\"                \n\nGLM\n[1] \"model$aic\"               \"model$assign\"            \"model$boundary\"          \"model$call\"              \"model$coefficients\"     \n[6] \"model$contrasts\"         \"model$control\"           \"model$converged\"         \"model$data\"              \"model$Design\"           \n[11] \"model$deviance\"          \"model$df.null\"           \"model$df.residual\"       \"model$effects\"           \"model$family\"           \n[16] \"model$fitted.values\"     \"model$formula\"           \"model$g\"                 \"model$iter\"              \"model$linear.predictors\"\n[21] \"model$method\"            \"model$model\"             \"model$na.action\"         \"model$null.deviance\"     \"model$offset\"           \n[26] \"model$prior.weights\"     \"model$qr\"                \"model$R\"                 \"model$rank\"              \"model$residuals\"        \n[31] \"model$sformula\"          \"model$terms\"             \"model$weights\"           \"model$xlevels\"           \"model$y\"             \n\n names(data)\n[1] \"Fertility\"        \"Agriculture\"      \"Examination\"      \"Education\"        \"Catholic\"        \n[6] \"Infant.Mortality\"\n\na=model1$terms[[2]]\nclass(data[,paste(model1$terms[[2]])])\n\nmodel3 <- Glm(Survived ~ Age + Class + Sex, data = data1, weights = Freq,\n              family = binomial(\"probit\"))\n\nclevel=0.95\npred <- predict(model1, newdata = new.d, se.fit = TRUE)\nlwb <- pred$linear.predictors - (qnorm(1 - (1 - clevel)/2) * pred$se.fit)\nupb <- pred$linear.predictors + (qnorm(1 - (1 - clevel)/2) * pred$se.fit)\nlubound <- sort(c(model1$family$linkinv(lwb), model1$family$linkinv(upb)))\nd.p <- data.frame(Prediction = model1$family$linkinv(pred$linear.predictors),\n                  Lower.bound = lubound[1], Upper.bound = lubound[2])\n\n\npred <- predict(model, newdata = new.d, type = \"link\", se.fit = TRUE)\nlwb <- pred$fit - (qnorm(1 - (1 - clevel)/2) * pred$se.fit)\nupb <- pred$fit + (qnorm(1 - (1 - clevel)/2) * pred$se.fit)\nlubound <- sort(c(model$family$linkinv(lwb), model$family$linkinv(upb)))\nd.p <- data.frame(Prediction = model$family$linkinv(pred$fit),\n                  Lower.bound = lubound[1], Upper.bound = lubound[2])\n\n\nlibrary(texreg)\nextract(model), include.rsquared = TRUE,\n        include.adjrs = TRUE, include.nobs = TRUE,\n        include.fstatistic = FALSE, include.rmse = TRUE)\n\n\n#############\n\ncounts <- c(18,17,15,20,10,20,25,13,12)\noutcome <- gl(3,1,9)\ntreatment <- gl(3,3)\ndata=data.frame(counts,outcome,treatment)\nf <- Glm(counts ~ outcome + treatment,data=data, family=poisson())\nDynNom.Glm(f,data)\n#############################################################################\n################################    DynNom for Ols\n#############################################################################\nmodel <- ols(Fertility ~ Agriculture + Education + Catholic , data = swiss)\nDynNom.Ols(model, swiss)\n\nmodel <- lm(Fertility ~ Agriculture + Education + Catholic , data = swiss)\nDynNom.lm(model, swiss)\n\n\n\npred <- predict(model, newdata = new.d, se.fit = TRUE)\nlwb <- pred$linear.predictors - (qnorm(1 - (1 - clevel)/2) * pred$se.fit)\nupb <- pred$linear.predictors + (qnorm(1 - (1 - clevel)/2) * pred$se.fit)\nd.p <- data.frame(Prediction = pred$linear.predictors,\n                  Lower.bound = lwb, Upper.bound = upb)\n\nmodel <- ols(Survived ~ Age + Class + Sex, data = data1)\n\nmodel <- ols(uptake ~ Plant + conc , data = CO2)\nDynNom.Ols(model, CO2)\n\n\n#############################################################################\n################################    DynNom for cph\n#############################################################################\nlibrary(simPH)\n### only one factor\nCarpenterFdaData$demsnmaj <- as.factor(CarpenterFdaData$demsnmaj)\nmodel <- coxph(Surv(acttime, censor) ~ demsnmaj+1, data = CarpenterFdaData)\n\n\n\nCarpenterFdaData$demsnmaj <- as.factor(CarpenterFdaData$demsnmaj)\nmodel <- cph(Surv(acttime, censor) ~ 0, data = CarpenterFdaData)\n\n\n\n### One strata + one numeric + one factor\ndata = CarpenterFdaData\nCarpenterFdaData$demsnmaj <- as.factor(CarpenterFdaData$demsnmaj)\nmodel <- cph(Surv(acttime, censor) ~ strat(prespart)+deathrt1+demsnmaj, data = CarpenterFdaData)\nmodel <- update(model,surv=T)\nnew.d <- CarpenterFdaData[1,]\nclevel <- 0.05\npred <- survest(model, newdata = new.d)\nPredict(model, prespart=0,deathrt1=0.0995,demsnmaj=0)\n\npredict(model, newdata=new.d,\n        se.fit=T, conf.int=T,\n        conf.type='simultaneous')\n\n\n\nPredict(model, prespart=0, deathrt1=0 , demsnmaj=0)\n\n\nmodel <- cph(Surv(acttime, censor) ~ strat(prespart)+strat(demsnmaj), data = CarpenterFdaData)\n\n\n\n\n\n### http://finzi.psych.upenn.edu/library/rms/html/rms.html\n\ndist <- datadist(data=2)     # can omit if not using summary, (gg)plot, survplot,\n# or if specify all variable values to them. Can\n# also  defer.  data=2: get distribution summaries\n# for all variables in search position 2\n# run datadist once, for all candidate variables\ndist <- datadist(age,race,bp,sex,height)   # alternative\noptions(datadist=\"dist\")\nmodel <- cph(Surv(d.time, death) ~ rcs(age,4)*strat(race) +\n                    bp*strat(sex)+lsp(height,60),x=TRUE,y=TRUE)\n\n### time dependent model:\n######################################################\nmodel <- cph(Surv(time, status) ~ trt + prior + karno + tt(karno),\n               data=veteran,\n               tt = function(x, t) x * log(t+20))\n\n################### test model cph\ndata=veteran\nmodel <-cph(Surv(time, status) ~ rcs(age,4)*strat(trt) +\n              diagtime*strat(prior)+lsp( karno,60),data=data)\nmodel <- update(model,x=T, y=T, surv=T)\n\n######################################################\ndata=veteran\nmodel <-cph(Surv(time, status) ~ rcs(age,4),data=data)\nmodel <- update(model,x=T, y=T, surv=T)\n######################################################\nset.seed(121)\ndframe <- data.frame(failure.time=1:10, event=rep(0:1,5),\n                     ie.time=c(NA,1.5,2.5,NA,3,4,NA,5,5,5), \n                     age=sample(40:80,10,rep=TRUE))\nz <- ie.setup(dframe$failure.time, dframe$event, dframe$ie.time)\nS <- z$S\nie.status <- z$ie.status\n\nmodel <- cph(S ~ age + ie.status, x=TRUE, y=TRUE)\ndata=data.frame(S,age,ie.status)\n\n######################################################\nset.seed(121)\ndframe <- data.frame(failure.time=1:10, event=rep(0:1,5),\n                     ie.time=c(NA,1.5,2.5,NA,3,4,NA,5,5,5), \n                     age=sample(40:80,10,rep=TRUE))\nz <- ie.setup(dframe$failure.time, dframe$event, dframe$ie.time)\nS <- z$S\nie.status <- z$ie.status\n\nmodel <- cph(S ~ age , x=TRUE, y=TRUE)\ndata=data.frame(S,age,ie.status)\n######################################################\nvars=c()\nfor(i in 1:length(model$Design$name)){\n  if(model$Design$assume[i]!=\"interaction\") vars[i] <- as.character(model$Design$name[i]) else vars[i]=\"inter\"\n}\nvars <- subset(vars,vars!=\"inter\")\nvars <- as.character(c(model$terms[[2]],vars))\ncvars <- NULL\ncvars[1] <- \"survdata\"\nfor(i in 2:length(vars))  cvars[i]=model$Design$assume[i-1]\n\n\nneededVar <- vars[-1]\nif (length(attr(model$terms, \"term.labels\")) == 1) {\n  input.data <- data.frame(data[1, neededVar])\n  names(input.data)[1] <<- vars[-1]\n} else {\n  input.data <- data[1, neededVar]\n}\ninput.data[1, ] <- NA\n\nb <- 1\ni.factor <- NULL\ni.numeric <- NULL\nfor (j in 2:length(vars)) {\n  for (i in 1:length(data)) {\n    if (vars[j] == names(data)[i]) {\n      if (cvars[j] == \"category\" |\n          cvars[j] == \"scored\"|\n          cvars[j] == \"factor\"|\n          cvars[j] == \"strata\"|\n          cvars[j] == \"ordered\") {\n        i.factor <- rbind(i.factor, c(vars[j], j, i, b))\n        (break)()\n      }\n      if (cvars[j] == \"rcspline\"|\n          cvars[j] == \"asis\"|\n          cvars[j] == \"lspline\"|\n          cvars[j] == \"polynomial\"|\n          cvars[j] == \"numeric\" |\n          cvars[j] == \"integer\"|\n          cvars[j] == \"double\"|\n          cvars[j] == \"matrix\") {\n        i.numeric <- rbind(i.numeric, c(vars[j], j, i))\n        b <- b + 1\n        (break)()\n      }\n    }\n  }\n}\n\ntim <- colnames(model$y)[-dim(model$y)[2]]\nsts <- colnames(model$y)[dim(model$y)[2]]\n\ntim <- colnames(model$y)[-dim(model$y)[2]]\nsts <- colnames(model$y)[dim(model$y)[2]]\n\nif (length(attr(model$terms, \"term.labels\")) == 1) {\n  if(dim(model$y)[2]==3){\n    input.data <- data.frame(cbind(stt = NA, ti1 = NA, ti2=NA, cov = NA), NO=NA)\n    names(input.data)[4] <- neededVar\n    names(input.data)[1:3] <- c(paste(sts), paste(tim))\n  } else{\n    input.data <- data.frame(cbind(stt = NA, ti = NA, cov = NA), NO=NA)\n    names(input.data)[3] <- neededVar\n    names(input.data)[1:2] <- c(paste(sts), paste(tim))\n  }\n} else{\n  if(dim(model$y)[2]==3){\n    data1 <- data[, neededVar]\n    input.data <- cbind(stt = NA, ti1 = NA,ti2=NA, data1[1, ], NO=NA)\n    names(input.data)[1:3] <- c(paste(sts), paste(tim))\n    input.data[1, ] <- NA\n  } else{\n    data1 <- data[, neededVar]\n    input.data <- cbind(stt = NA, ti = NA, data1[1, ], NO=NA)\n    names(input.data)[1:2] <- c(paste(sts), paste(tim))\n    input.data[1, ] <- NA\n  }\n}\n\n######################################################\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsurvest(model, prespart=0, deathrt1=0 , demsnmaj=0,\n        conf.int=.95)\n\n\n#### Prediction for cph:\nplot(survest(model, newdata=new.d)$surv)\nacttime prespart deathrt1 demsnmaj Prediction Lower.bound Upper.bound\n45       0      0.100      0       0.562       0.495       0.638  \n\nnew.d <- data.frame(prespart=0,deathrt1=0.2,demsnmaj=\"0\",acttime=45,censor=1)\nsurvest(model, newdata=new.d,times=45)\n\n\n######### Test for cph prediction\nlibrary(simPH)\ndata = CarpenterFdaData\nCarpenterFdaData$demsnmaj <- as.factor(CarpenterFdaData$demsnmaj)\nmodel <- cph(Surv(acttime, censor) ~ strat(prespart)+lsp(deathrt1,1)+strat(demsnmaj), data = CarpenterFdaData)\nmodel <- update(model, surv=T,x=T,y=T)\nclevel <- 0.05\nnew.d <- data.frame(prespart=0,deathrt1=0.2,demsnmaj=0,acttime=45,censor=1)\npred <- survest(model, newdata=new.d,times=45)\nPredict(model, prespart=0,deathrt1=0.2,demsnmaj=0,time=45)\nmodel <- cph(Surv(acttime, censor) ~ strat(prespart)+deathrt1+demsnmaj, data = CarpenterFdaData)\nDynNom.cph(model,data)\n\n######### Test for coxph prediction\nlibrary(simPH)\ndata = CarpenterFdaData\nCarpenterFdaData$demsnmaj <- as.factor(CarpenterFdaData$demsnmaj)\nmodel <- coxph(Surv(acttime, censor) ~ strata(prespart)+deathrt1+strata(demsnmaj), data = CarpenterFdaData)\nclevel <- 0.05\nnew.d <- data.frame(prespart=0,deathrt1=0.2,demsnmaj=\"0\",acttime=45,censor=1)\n\npred <- predict(model, newdata = new.d, se.fit = TRUE,conf.int = clevel, type = \"expected\", reference = \"strata\")\n\n\n### lung example\ndata=lung\nmodel1 <- cph(Surv(time, status) ~ age + strat(sex) + ph.ecog , data=lung)\nmodel1 <- update(model1, surv=T,x=T,y=T)\n\nDynNom.cph(model, lung)\n\n#### spline\nmodel1<-cph(with(data=veteran,Surv(time,status)~rcs(age,4)+trt),x=TRUE,y=TRUE)\n\n",
    "created" : 1473933787303.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "591652947",
    "id" : "2B496CA2",
    "lastKnownWriteTime" : 1464082545,
    "path" : "C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V3.0/Final/Check/test.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}