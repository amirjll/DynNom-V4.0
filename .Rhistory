library(DynNom)
devtools::test()
devtools::test()
library("devtools", lib.loc="~/R/win-library/3.3")
devtools::test()
detach("package:devtools", unload=TRUE)
library(testthat)
library(DynNom)
test_check("DynNom")
?test_check
library(DynNom)
remove.packages("DynNom", lib="~/R/win-library/3.3")
install.packages("DynNom")
require(rms)
data(lung)
Surv = Surv(time, status)
Surv = Surv(lung$time, lung$status)
is.Surv(Surv)
?is.Surv
ttf = Surv(lung$time, lung$status)
is.Surv(ttf)
data(lung)
Surv = Surv(lung$time, lung$status)
model2 <- cph(Surv ~ age + strat(sex) + ph.ecog , data = lung)
model <- cph(Surv ~ age + strat(sex) + ph.ecog , data = lung)
vars=c()
for(i in 1:length(model$Design$name)){
if(model$Design$assume[i]!="interaction") vars[i] <- as.character(model$Design$name[i]) else vars[i]="inter"
}
vars <- subset(vars,vars!="inter")
vars <- as.character(c(model$terms[[2]],vars))
cl.vars <-  model$Design$assume[model$Design$assume!="interaction"]
cvars <- NULL
cvars[1] <- "survdata"
for(i in 2:length(vars))  cvars[i]=cl.vars[i-1]
vars
tt=vars[1]
substring(tt,1,5)=="Surv("
is.Surv(vars[1])
model <- cph(Surv(lung$time, lung$status) ~ age + strat(sex) + ph.ecog , data = lung)
vars=c()
for(i in 1:length(model$Design$name)){
if(model$Design$assume[i]!="interaction") vars[i] <- as.character(model$Design$name[i]) else vars[i]="inter"
}
vars <- subset(vars,vars!="inter")
vars <- as.character(c(model$terms[[2]],vars))
cl.vars <-  model$Design$assume[model$Design$assume!="interaction"]
cvars <- NULL
cvars[1] <- "survdata"
for(i in 2:length(vars))  cvars[i]=cl.vars[i-1]
tt=vars[1]
substring(tt,1,5)=="Surv("
is.Surv(vars[1])
model$Design$assume
model$terms
attr(model$terms,"factors")
attr(model$terms,"factors")[1]
attr(model$terms,"variables")[1]
attr(model$terms,"variables")
attr(model$terms,"variables")[2]
library("DynNom", lib.loc="~/R/win-library/3.3")
data = veteran
model1 <- cph((Surv(log(time), status)) ~ rcs(age, 4) * strat(trt) +
diagtime * strat(prior) + lsp(karno, 60), data = veteran)
model1 <- update(model1, x = T, y = T, surv = T)
DynNom.cph(model1, data)
data(lung)
sfit = Surv(lung$time, lung$status)
model2 <- cph(sfit ~ age + strat(sex) + ph.ecog , data = lung)
DynNom.cph(model2, lung)
data1 <- data.frame(state.x77)
fit1 <- ols(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad +
Frost + Area , data = data1)
require(rms)
data1 <- data.frame(state.x77)
fit1 <- ols(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad +
Frost + Area , data = data1)
DynNom(fit1, data1)
library("DynNom", lib.loc="~/R/win-library/3.3")
DynNom(fit1, data1)
data1 <- data.frame(state.x77)
fit1 <- ols(Life.Exp ~ Population + Income + Murder + Frost , data = data1)
DynNom(fit1, data1)
?substitute
?nchar
?substr
?getwd
?message
?dir.create
?setwd
?saveRDS
?writeLines
setwd("C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom")
?setwd
install.packages("C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom_4.0.tar.gz", repos = NULL, type = "source")
source('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom/R/DNraw.R')
source('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom/R/DNraw-lm.R')
source('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom/R/DNraw-glm.R')
source('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom/R/DNraw-coxph.R')
shiny::runApp('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/shinyapp')
runApp('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/shinyapp')
runApp('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/shinyapp')
data1 =as.data.frame(Titanic)
model2 <- glm(Survived ~ Age + Class + Sex, data = data1, weights = Freq,
+               family = binomial("probit"))
model2 <- glm(Survived ~ Age + Class + Sex, data = data1, weights = Freq,
family = binomial("probit"))
DynNon(model2, as.data.frame(Titanic), clevel = 0.9)
DynNom(model2, as.data.frame(Titanic), clevel = 0.9)
library("DynNom", lib.loc="~/R/win-library/3.3")
DynNom(model2, as.data.frame(Titanic), clevel = 0.9)
lfunc = function(p){
choose(50,30)*(p^30)*((1-p)^20)
}
optim(.1, lfunc, method = "Brent")
optim(.1, lfunc, method = "Brent", control = list(fnscale=-1))
lfunc = function(p){
-(choose(50,30)*(p^30)*((1-p)^20))
}
optim(.1, lfunc, method = "Brent", control = list(fnscale=-1))
optim(.1, lfunc, method = "Brent",lower = 0, upper = 1)
lfunc = function(p){
(choose(50,30)*(p^30)*((1-p)^20))
}
optim(.1, lfunc, method = "Brent",lower = 0, upper = 1)
lfunc = function(p){
-(choose(50,30)*(p^30)*((1-p)^20))
}
optim(.1, lfunc, method = "Brent",lower = 0, upper = 1)
?lrtest
mean(1,2,3)
mean(c(1,2,3))
runApp('C:/Users/Amir/Dropbox/Projects/Shiny apps/Blackboard vlookup')
runApp('C:/Users/Amir/Dropbox/Projects/Shiny apps/Blackboard vlookup')
install.packages("C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom_4.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom_4.0.zip", repos = NULL, type = "win.binary")
remove.packages("DynNom", lib="~/R/win-library/3.3")
install.packages("C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom_4.0.tar.gz", repos = NULL, type = "source")
install.packages("DynNom")
shiny::runApp('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/shinyapp')
install.packages("ggplot2")
install.packages("devtools")
devtools::install_github("tidyverse/ggplot2")
package.skeleton("pkgtest")
remove.packages("ggplot2", lib="~/R/win-library/3.3")
install.packages("ggplot2")
?writeLines
?message
?setwd
source('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom/R/DNbuilder-lm.R', encoding = 'UTF-8')
data1 <- data.frame(state.x77)
fit1 <- lm(formula = Life.Exp ~ ., data = data1)
DNbuilder.lm(fit1, data1)
source('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNom/R/DNbuilder-lm.R', encoding = 'UTF-8')
data1 <- data.frame(state.x77)
fit1 <- lm(formula = Life.Exp ~ ., data = data1)
DNbuilder.lm(fit1, data1)
shiny::runApp('C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNomapp')
?data
library("coin", lib.loc="~/R/win-library/3.3")
detach("package:coin", unload=TRUE)
?data
data()
install.packages(DPpackage)
instal.package(rms)
install.packages("rms")
install.packages("rms")
install.packages("DPpackage")
require(DPpackage)
galaxy
data("galaxy")
galaxy
install.packages("C:/Users/Amir/Desktop/DPpackage_1.1-6.tar.gz", repos = NULL, type = "source")
remove.packages("DPpackage", lib="~/R/win-library/3.3")
install.packages("C:/Users/Amir/Desktop/DPpackage_1.1-6.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/Amir/Desktop/DPpackage_1.1-6.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/Amir/Desktop/DPpackage_1.1-6.zip", repos = NULL, type = "win.binary")
library(ggplot2)
library(shiny)
library(stargazer)
library(compare)
setwd("C:/Users/Amir/Dropbox/Projects/DynNom project/DynNom V4.0/DynNomapp")
data <- readRDS('dataset.rds')
model <- lm(Life.Exp ~ ., data = data)
covariate <- 'slider'
input.data <- NULL
old.d <- NULL
xlevels <- model$xlevels
mterms <- attr(model$terms, 'dataClasses')
n.mterms <- names(mterms)
mterms
n.mterms
library(ggplot2)
library(shiny)
library(stargazer)
library(compare)
data <- readRDS('dataset.rds')
model <- lm(uptake ~ Plant + conc + Plant * conc, data = data)
covariate <- 'slider'
library(DynNom)
library(DynNom)
shiny::runApp('C:/Users/Amir/Dropbox/Projects/thesis/biometrical journal/paper/BPD/all results/DynNomapp')
runApp('C:/Users/Amir/Dropbox/Projects/thesis/biometrical journal/paper/BPD/all results/DynNomapp')
runApp('C:/Users/Amir/Dropbox/Projects/thesis/biometrical journal/paper/BPD/all results/DynNomapp')
runApp('C:/Users/Amir/Dropbox/Projects/thesis/biometrical journal/paper/BPD/all results/DynNomapp')
